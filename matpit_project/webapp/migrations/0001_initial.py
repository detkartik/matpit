# Generated by Django 3.1.5 on 2021-07-23 02:32

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('first_name', models.CharField(blank=True, max_length=100, null=True)),
                ('last_name', models.CharField(blank=True, max_length=100, null=True)),
                ('email', models.EmailField(default='', max_length=250)),
                ('phone', models.CharField(default='', max_length=10, unique=True, validators=[django.core.validators.RegexValidator('^\\d{1,10}$')])),
                ('referral_code', models.CharField(blank=True, max_length=32, null=True)),
                ('referred_by', models.CharField(blank=True, max_length=100, null=True)),
                ('role', models.CharField(choices=[('ADMIN', 'ADMIN'), ('BH', 'BH'), ('AFM', 'AFM'), ('AF', 'AF'), ('AM', 'AM'), ('ACCOUNT', 'ACCOUNT'), ('BO', 'BO'), ('ZSM', 'ZSM'), ('RSM', 'RSM'), ('ASM', 'ASM'), ('SM', 'SM'), ('RM', 'RM'), ('DSA', 'DSA'), ('CONNECTOR', 'CONNECTOR')], max_length=10)),
                ('password_update', models.BooleanField(default=False)),
                ('profile_update', models.BooleanField(default=False)),
                ('profile_created', models.DateTimeField(auto_now=True, null=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('verified_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_suspended', models.BooleanField(default=False)),
                ('suspended_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_rejected', models.BooleanField(default=False)),
                ('rejected_at', models.DateTimeField(auto_now=True, null=True)),
                ('rejection_reason', models.TextField(blank=True, null=True)),
                ('account_number', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('account_name', models.CharField(blank=True, max_length=100, null=True)),
                ('ifsc_code', models.CharField(blank=True, max_length=32, null=True, unique=True)),
                ('image', models.ImageField(blank=True, default='images/demouser_jUEee1U.jpeg', null=True, upload_to='images/')),
                ('adhaar_image', models.ImageField(blank=True, null=True, upload_to='aadhar_pics/')),
                ('pancard_image', models.ImageField(blank=True, null=True, upload_to='pancard_pics/')),
                ('cancelled_cheque_image', models.ImageField(blank=True, null=True, upload_to='cheque_pics/')),
                ('professional_occupation', models.TextField(blank=True, null=True)),
                ('state', models.CharField(blank=True, max_length=50, null=True)),
                ('pincode', models.CharField(blank=True, max_length=6, null=True, validators=[django.core.validators.RegexValidator('^\\d{1,10}$')])),
                ('housing_loan', models.CharField(blank=True, max_length=10, null=True, validators=[django.core.validators.RegexValidator('^\\d{1,10}$')])),
                ('mortgage_loan', models.CharField(blank=True, max_length=10, null=True, validators=[django.core.validators.RegexValidator('^\\d{1,10}$')])),
                ('vehical_loan', models.CharField(blank=True, max_length=10, null=True, validators=[django.core.validators.RegexValidator('^\\d{1,10}$')])),
                ('personal_loan', models.CharField(blank=True, max_length=10, null=True, validators=[django.core.validators.RegexValidator('^\\d{1,10}$')])),
                ('terms_condition', models.BooleanField(default=False)),
                ('is_gst', models.BooleanField(default=False)),
                ('gstin', models.CharField(blank=True, max_length=100, null=True)),
                ('gst_proof_image', models.ImageField(blank=True, null=True, upload_to='gst_proof_pics/')),
                ('active_user', models.BooleanField(default=False, help_text='Whether the user is active or not')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('manager', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='refer', to=settings.AUTH_USER_MODEL)),
                ('rejected_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reject', to=settings.AUTH_USER_MODEL)),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
                ('verified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='verify', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
    ]
